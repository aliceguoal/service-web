buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.6.RELEASE'
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'jacoco'
    id 'io.spring.dependency-management' version '0.6.0.RELEASE'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}
apply plugin: 'spring-boot'

group = 'sg.ncl'

def getVersion = {
    def major = '1'
    def minor = '0'
    def build = System.getenv('bamboo_buildNumber')
    if (build == null || build.isEmpty()) {
        build = 'SNAPSHOT'
    } else {
        build = 'b' + build
    }
    return String.format('%s.%s-%s', major, minor, build)
}

version getVersion()

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
}

dependencyManagement {
    dependencies {
        dependency 'commons-io:commons-io:2.5'
        dependency 'org.projectlombok:lombok:1.16.10'
    }
    imports {
        mavenBom 'io.spring.platform:platform-bom:2.0.6.RELEASE'
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-configuration-processor'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'javax.inject:javax.inject'
    compile 'org.json:json'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile 'commons-io:commons-io'
    compile 'org.projectlombok:lombok'

    testCompile 'org.apache.commons:commons-lang3:3.4'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

compileJava {
    dependsOn processResources
}

tasks.jacocoTestReport {
    dependsOn check
    reports {
        xml {
            enabled true
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion '2.14'
    distributionUrl "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
